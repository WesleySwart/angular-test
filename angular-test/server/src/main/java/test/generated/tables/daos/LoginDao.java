/**
 * This class is generated by jOOQ
 */
package test.generated.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import test.generated.tables.Login;
import test.generated.tables.records.LoginRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LoginDao extends DAOImpl<LoginRecord, test.generated.tables.pojos.Login, String> {

    /**
     * Create a new LoginDao without any configuration
     */
    public LoginDao() {
        super(Login.LOGIN, test.generated.tables.pojos.Login.class);
    }

    /**
     * Create a new LoginDao with an attached configuration
     */
    public LoginDao(Configuration configuration) {
        super(Login.LOGIN, test.generated.tables.pojos.Login.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(test.generated.tables.pojos.Login object) {
        return object.getUsername();
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<test.generated.tables.pojos.Login> fetchByUsername(String... values) {
        return fetch(Login.LOGIN.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public test.generated.tables.pojos.Login fetchOneByUsername(String value) {
        return fetchOne(Login.LOGIN.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<test.generated.tables.pojos.Login> fetchByPassword(String... values) {
        return fetch(Login.LOGIN.PASSWORD, values);
    }
}
